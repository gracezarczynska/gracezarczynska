{"version":3,"sources":["webpack:///./src/components/Contact/Contact.js","webpack:///./src/pages/contact.js","webpack:///./src/components/Article/Headline.js","webpack:///./src/components/Seo/Seo.js","webpack:///./src/components/Seo/index.js","webpack:///./src/components/Article/Article.js","webpack:///./src/components/Article/index.js"],"names":["FormItem","Form","Item","TextArea","Input","Contact","props","_useState","useState","setStatus","getFieldDecorator","form","handleSubmit","e","preventDefault","validateFields","err","values","console","log","target","data","FormData","xhr","XMLHttpRequest","open","method","action","setRequestHeader","onreadystatechange","readyState","DONE","status","navigate","send","react_default","a","createElement","Fragment","layouts","Consumer","theme","className","style_default","dynamic","color","brand","primary","form_default","name","onSubmit","label","rules","whitespace","input_default","required","message","type","placeholder","autosize","minRows","maxRows","button_default","htmlType","styleId","css","propTypes","PropTypes","object","ContactForm","create","__webpack_require__","d","__webpack_exports__","query","ContactPage","facebook","site","siteMetadata","Article","Headline","title","components_Contact_Contact","Seo","isRequired","children","react__WEBPACK_IMPORTED_MODULE_1___default","styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default","font","size","xxl","space","stack","l","time","duration","long","weight","standard","xs","xl","string","node","postTitle","frontmatter","postDescription","description","postCover","cover","postSlug","fields","slug","config","shortSiteTitle","siteTitle","siteDescription","image","siteImage","url","siteUrl","Helmet_default","htmlAttributes","lang","siteLanguage","prefix","content","property","appId","authorTwitterAccount","components_Seo_Seo","inset","default","text","maxWidth","tablet","desktop","components_Article_Article"],"mappings":"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","file":"component---src-pages-contact-js-316dee047175f15f62c7.js","sourcesContent":["/* eslint no-unused-vars: 0 */\n\nimport { navigate } from \"gatsby\";\nimport Button from \"antd/lib/button\";\nimport Form from \"antd/lib/form\";\nimport Input from \"antd/lib/input\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\n\nconst FormItem = Form.Item;\nconst { TextArea } = Input;\nimport \"antd/lib/form/style/index.css\";\nimport \"antd/lib/input/style/index.css\";\nimport \"antd/lib/button/style/index.css\";\nimport { ThemeContext } from \"../../layouts\";\n\nconst Contact = props => {\n  const [status, setStatus] = useState(\"\");\n  const { getFieldDecorator } = props.form;\n\n  function encode(data) {\n    return Object.keys(data)\n      .map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\n      .join(\"&\");\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n        const form = e.target;\n        const data = new FormData(form);\n        const xhr = new XMLHttpRequest();\n        xhr.open(form.method, form.action);\n        xhr.setRequestHeader(\"Accept\", \"application/json\");\n        xhr.onreadystatechange = () => {\n          if (xhr.readyState !== XMLHttpRequest.DONE) return;\n          if (xhr.status === 200) {\n            setStatus(\"SUCCESS\");\n            navigate(\"/success\");\n          } else {\n            setStatus(\"ERROR\");\n          }\n        };\n        xhr.send(data);\n      }\n    });\n  }\n\n  function handleNetworkError(e) {\n    console.log(\"submit Error\");\n  }\n\n  return (\n    <React.Fragment>\n      <ThemeContext.Consumer>\n        {theme => (\n          <div className=\"form\">\n            <Form\n              name=\"contact\"\n              onSubmit={handleSubmit}\n              action=\"https://formspree.io/mvognpqp\"\n              method=\"POST\"\n            >\n              <FormItem label=\"Name\">\n                {getFieldDecorator(\"name\", {\n                  rules: [\n                    {\n                      whitespace: true\n                    }\n                  ]\n                })(<Input name=\"name\" />)}\n              </FormItem>\n              <FormItem label=\"E-mail\">\n                {getFieldDecorator(\"email\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"Please input your e-mail address!\",\n                      whitespace: true,\n                      type: \"email\"\n                    }\n                  ]\n                })(<Input name=\"email\" />)}\n              </FormItem>\n              <FormItem label=\"Message\">\n                {getFieldDecorator(\"message\", {\n                  rules: [\n                    { required: true, message: \"Please input your message!\", whitespace: true }\n                  ]\n                })(\n                  <TextArea name=\"message\" placeholder=\"\" autosize={{ minRows: 4, maxRows: 10 }} />\n                )}\n              </FormItem>\n              <FormItem>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Submit\n                </Button>\n              </FormItem>\n            </Form>\n\n            {/* --- STYLES --- */}\n            <style jsx>{`\n              .form {\n                background: transparent;\n              }\n              .form :global(.ant-row.ant-form-item) {\n                margin: 0 0 1em;\n              }\n              .form :global(.ant-row.ant-form-item:last-child) {\n                margin-top: 1em;\n              }\n              .form :global(.ant-form-item-control) {\n                line-height: 1em;\n              }\n              .form :global(.ant-form-item-label) {\n                line-height: 1em;\n                margin-bottom: 0.5em;\n              }\n              .form :global(.ant-form-item) {\n                margin: 0;\n              }\n              .form :global(.ant-input) {\n                appearance: none;\n                height: auto;\n                font-size: 1.2em;\n                padding: 0.5em 0.6em;\n              }\n              .form :global(.ant-btn-primary) {\n                height: auto;\n                font-size: 1.2em;\n                padding: 0.5em 3em;\n                background: ${theme.color.brand.primary};\n                border: 1px solid ${theme.color.brand.primary};\n              }\n              .form :global(.ant-form-explain) {\n                margin-top: 0.2em;\n              }\n\n              @from-width desktop {\n                .form :global(input) {\n                  max-width: 50%;\n                }\n              }\n            `}</style>\n          </div>\n        )}\n      </ThemeContext.Consumer>\n    </React.Fragment>\n  );\n};\n\nContact.propTypes = {\n  form: PropTypes.object\n};\n\nconst ContactForm = Form.create({})(Contact);\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { ThemeContext } from \"../layouts\";\nimport Article from \"../components/Article\";\nimport Contact from \"../components/Contact\";\nimport Headline from \"../components/Article/Headline\";\nimport Seo from \"../components/Seo\";\n\nconst ContactPage = props => {\n  const {\n    data: {\n      site: {\n        siteMetadata: { facebook }\n      }\n    }\n  } = props;\n\n  return (\n    <React.Fragment>\n      <ThemeContext.Consumer>\n        {theme => (\n          <Article theme={theme}>\n            <header>\n              <Headline title=\"Contact\" theme={theme} />\n            </header>\n            <Contact theme={theme} />\n          </Article>\n        )}\n      </ThemeContext.Consumer>\n\n      <Seo facebook={facebook} />\n    </React.Fragment>\n  );\n};\n\nContactPage.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default ContactPage;\n\n//eslint-disable-next-line no-undef\nexport const query = graphql`\n  query ContactQuery {\n    site {\n      siteMetadata {\n        facebook {\n          appId\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Headline = props => {\n  const { title, children, theme } = props;\n\n  return (\n    <React.Fragment>\n      {title ? <h1>{title}</h1> : <h1>{children}</h1>}\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        h1 {\n          font-size: ${theme.font.size.xxl};\n          margin: ${theme.space.stack.l};\n          animation-name: headlineEntry;\n          animation-duration: ${theme.time.duration.long};\n\n          :global(span) {\n            font-weight: ${theme.font.weight.standard};\n            display: block;\n            font-size: 0.5em;\n            letter-spacing: 0;\n            margin: ${theme.space.stack.xs};\n          }\n\n          :global(svg) {\n            height: 0.75em;\n            fill: ${theme.color.brand.primary};\n          }\n        }\n\n        @keyframes headlineEntry {\n          from {\n            opacity: 0.5;\n          }\n          to {\n            opacity: 1;\n          }\n        }\n\n        @from-width tablet {\n          h1 {\n            font-size: ${`calc(${theme.font.size.xl} * 1.2)`};\n          }\n        }\n\n        @from-width desktop {\n          h1 {\n            font-size: ${`calc(${theme.font.size.xl} * 1.4)`};\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nHeadline.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Headline;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../../content/meta/config\";\n\nconst Seo = props => {\n  const { data, facebook } = props;\n  const postTitle = ((data || {}).frontmatter || {}).title;\n  const postDescription = ((data || {}).frontmatter || {}).description;\n  const postCover = ((data || {}).frontmatter || {}).cover;\n  const postSlug = ((data || {}).fields || {}).slug;\n\n  const title = postTitle ? `${postTitle} - ${config.shortSiteTitle}` : config.siteTitle;\n  const description = postDescription ? postDescription : config.siteDescription;\n  const image = postCover ? postCover : config.siteImage;\n  const url = config.siteUrl + postSlug;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang: config.siteLanguage,\n        prefix: \"og: http://ogp.me/ns#\"\n      }}\n    >\n      {/* General tags */}\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      {/* OpenGraph tags */}\n      <meta property=\"og:url\" content={url} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"fb:app_id\" content={facebook.appId} />\n      {/* Twitter Card tags */}\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={config.authorTwitterAccount ? config.authorTwitterAccount : \"\"}\n      />\n    </Helmet>\n  );\n};\n\nSeo.propTypes = {\n  data: PropTypes.object,\n  facebook: PropTypes.object.isRequired\n};\n\nexport default Seo;\n","export { default } from \"./Seo\";\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Article = props => {\n  const { children, theme } = props;\n\n  return (\n    <React.Fragment>\n      <article className=\"article\">{children}</article>\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        .article {\n          padding: ${theme.space.inset.default};\n          margin: 0 auto;\n        }\n        @from-width tablet {\n          .article {\n            padding: ${`calc(${theme.space.default}) calc(${theme.space.default} * 2)`};\n            max-width: ${theme.text.maxWidth.tablet};\n          }\n        }\n        @from-width desktop {\n          .article {\n            padding: ${`calc(${theme.space.default} * 2 + 90px) 0 calc(${\n              theme.space.default\n            } * 2)`};\n            max-width: ${theme.text.maxWidth.desktop};\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nArticle.propTypes = {\n  children: PropTypes.node.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Article;\n","export { default } from \"./Article\";\n"],"sourceRoot":""}